import '../auth/auth_util.dart';import '../backend/backend.dart';import '../flutter_flow/flutter_flow_calendar.dart';import '../flutter_flow/flutter_flow_theme.dart';import '../flutter_flow/flutter_flow_util.dart';import '../flutter_flow/flutter_flow_widgets.dart';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import 'package:google_fonts/google_fonts.dart';class FormWidget extends StatefulWidget {  const FormWidget({Key? key}) : super(key: key);  @override  _FormWidgetState createState() => _FormWidgetState();}class _FormWidgetState extends State<FormWidget> {  DateTimeRange? calendarSelectedDay;  TextEditingController? textFieldTaskController;  final formKey = GlobalKey<FormState>();  final scaffoldKey = GlobalKey<ScaffoldState>();  @override  void initState() {    super.initState();    calendarSelectedDay = DateTimeRange(      start: DateTime.now().startOfDay,      end: DateTime.now().endOfDay,    );    textFieldTaskController = TextEditingController();  }  @override  void dispose() {    textFieldTaskController?.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return Scaffold(      key: scaffoldKey,      backgroundColor: FlutterFlowTheme.of(context).primaryBackground,      body: SafeArea(        child: GestureDetector(          onTap: () => FocusScope.of(context).unfocus(),          child: Column(            mainAxisSize: MainAxisSize.max,            mainAxisAlignment: MainAxisAlignment.end,            children: [              Padding(                padding: EdgeInsetsDirectional.fromSTEB(20, 40, 20, 40),                child: Form(                  key: formKey,                  autovalidateMode: AutovalidateMode.disabled,                  child: Column(                    mainAxisSize: MainAxisSize.max,                    mainAxisAlignment: MainAxisAlignment.end,                    crossAxisAlignment: CrossAxisAlignment.stretch,                    children: [                      TextFormField(                        controller: textFieldTaskController,                        autofocus: true,                        obscureText: false,                        decoration: InputDecoration(                          labelText: 'Task',                          labelStyle:                              FlutterFlowTheme.of(context).bodyText1.override(                                    fontFamily: 'Roboto',                                    fontSize: 14,                                    fontWeight: FontWeight.w500,                                  ),                          hintText: 'task description',                          hintStyle: FlutterFlowTheme.of(context).bodyText2,                          enabledBorder: OutlineInputBorder(                            borderSide: BorderSide(                              color: Color(0xFFDBDBDB),                              width: 1,                            ),                            borderRadius: const BorderRadius.only(                              topLeft: Radius.circular(4.0),                              topRight: Radius.circular(4.0),                            ),                          ),                          focusedBorder: OutlineInputBorder(                            borderSide: BorderSide(                              color: Color(0xFFDBDBDB),                              width: 1,                            ),                            borderRadius: const BorderRadius.only(                              topLeft: Radius.circular(4.0),                              topRight: Radius.circular(4.0),                            ),                          ),                          errorBorder: OutlineInputBorder(                            borderSide: BorderSide(                              color: Color(0x00000000),                              width: 1,                            ),                            borderRadius: const BorderRadius.only(                              topLeft: Radius.circular(4.0),                              topRight: Radius.circular(4.0),                            ),                          ),                          focusedErrorBorder: OutlineInputBorder(                            borderSide: BorderSide(                              color: Color(0x00000000),                              width: 1,                            ),                            borderRadius: const BorderRadius.only(                              topLeft: Radius.circular(4.0),                              topRight: Radius.circular(4.0),                            ),                          ),                          filled: true,                          fillColor: Color(0x00DADADA),                        ),                        style: FlutterFlowTheme.of(context).bodyText1.override(                              fontFamily: 'Roboto',                              fontSize: 16,                              fontWeight: FontWeight.normal,                            ),                        maxLines: 4,                      ),                      Padding(                        padding: EdgeInsetsDirectional.fromSTEB(0, 30, 0, 0),                        child: Text(                          'Select due date',                          style: FlutterFlowTheme.of(context).bodyText1,                        ),                      ),                      Padding(                        padding: EdgeInsetsDirectional.fromSTEB(0, 8, 0, 0),                        child: FlutterFlowCalendar(                          color: FlutterFlowTheme.of(context).primaryColor,                          weekFormat: true,                          weekStartsMonday: false,                          initialDate: getCurrentTimestamp,                          onChange: (DateTimeRange? newSelectedDate) {                            setState(                                () => calendarSelectedDay = newSelectedDate);                          },                          titleStyle: TextStyle(),                          dayOfWeekStyle: TextStyle(),                          dateStyle: TextStyle(),                          selectedDateStyle: TextStyle(),                          inactiveDateStyle: TextStyle(),                        ),                      ),                      Padding(                        padding: EdgeInsetsDirectional.fromSTEB(0, 40, 0, 0),                        child: FFButtonWidget(                          onPressed: () async {                            if (!((valueOrDefault(                                        currentUserDocument?.taskCount, 0) >=                                    1) &&                                (valueOrDefault(                                        currentUserDocument?.taskCount, 0) ==                                    1))) {                              final usersUpdateData = createUsersRecordData(                                taskCount: 1,                              );                              await currentUserReference!                                  .update(usersUpdateData);                            } else {                              final usersUpdateData = {                                'taskCount': FieldValue.increment(1),                              };                              await currentUserReference!                                  .update(usersUpdateData);                            }                            final tasksCreateData = createTasksRecordData(                              task: textFieldTaskController!.text,                              status: false,                              due: calendarSelectedDay?.start,                              user: currentUserReference,                            );                            await TasksRecord.collection                                .doc()                                .set(tasksCreateData);                            Navigator.pop(context);                          },                          text: 'Add Task',                          options: FFButtonOptions(                            width: 130,                            height: 40,                            color: FlutterFlowTheme.of(context).primaryColor,                            textStyle:                                FlutterFlowTheme.of(context).subtitle2.override(                                      fontFamily: 'Roboto',                                      color: Colors.white,                                    ),                            borderSide: BorderSide(                              color: Colors.transparent,                              width: 1,                            ),                            borderRadius: BorderRadius.circular(8),                          ),                        ),                      ),                    ],                  ),                ),              ),            ],          ),        ),      ),    );  }}